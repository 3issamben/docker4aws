#!/usr/bin/env ruby

require 'json'
require 'open-uri'


VERSION = 'tomalok2'.freeze

unless ARGV.count == 1
  STDERR.puts "Usage: #{File.basename($0)} { <template-uri> | <template-file> }"
  exit 1
end


### read in the source template
t = JSON.parse(open(ARGV[0]).read)


### Update Description
t['Description'].gsub!(/(-aws\d+)/, "\\1-#{VERSION}")


### Update Mappings
t['Mappings'].merge!(JSON.parse(File.read('src/mappings.json')))


### Update Interface
i = t['Metadata']['AWS::CloudFormation::Interface']

# Update ParameterGroups
parameter_groups = JSON.parse(File.read('src/parameter_groups.json'))
i['ParameterGroups'].each do |pg|
  if parameter_groups.has_key?(pg['Label']['default'])
    pg['Parameters'].push(*parameter_groups[pg['Label']['default']])
  end
end

# Update ParameterLabels
i['ParameterLabels'].merge!(JSON.parse(File.read('src/parameter_labels.json')))


### Update Parameters
t['Parameters'].merge!(JSON.parse(File.read('src/parameters.json')))


### Update Resources

t['Resources'].merge!(JSON.parse(File.read('src/resources.json')))

# remove old ECRPolicy Resource (apparently it was added to the official template)
t['Resources'].delete('ECRPolicy')

# discover the manager launch config name (UserData)
lc_name = t['Resources'].keys.select{|k| /^ManagerLaunchConfig(.+)$/.match?(k) }.first

# Manager UserData array
mud = t['Resources'][lc_name]['Properties']['UserData']['Fn::Base64']['Fn::Join'].last

# add ECR auth login target export to Manager UserData
mud.push(*JSON.parse(File.read('src/manager-userdata.json')))

# get/add install-refresh-ecr-auth code
mud.concat(File.readlines('src/install-refresh-ecr-auth.sh'))


### output the tweaked template

puts JSON.pretty_generate(t)
